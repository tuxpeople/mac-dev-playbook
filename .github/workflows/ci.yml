---
name: CI
'on':
  pull_request:
  push:
    branches:
      - master
  schedule:
    - cron: "0 5 * * 4"

jobs:

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Check out the codebase.
        uses: actions/checkout@v4

      - name: Set up Python 3.
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install test dependencies.
        run: |
          sudo apt-get update
          sudo apt-get install -y shellcheck
          pip3 install yamllint ansible ansible-lint

      - name: Lint code.
        run: |
          yamllint .
          ansible-lint

      - name: Run shellcheck.
        run: shellcheck init.sh init_light.sh tests/uninstall-homebrew.sh

  requirements-check:
    name: Check Python Requirements
    runs-on: ubuntu-latest
    steps:
      - name: Check out the codebase.
        uses: actions/checkout@v4

      - name: Set up Python 3.11.
        uses: actions/setup-python@v5
        with:
          python-version: '3.11.8'

      - name: Install requirements.txt.
        run: |
          pip3 install --upgrade pip
          pip3 install -r requirements.txt

      - name: Verify Ansible can be imported.
        run: |
          python3 -c "import ansible; print(f'Ansible version: {ansible.__version__}')"

      - name: Check for dependency conflicts.
        run: |
          pip3 check

      - name: Verify ansible-playbook works.
        run: |
          ansible-playbook --version

      - name: Check for security vulnerabilities.
        run: |
          pip3 install safety
          safety check --json || true

  integration:
    name: Integration
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - macos-12
          - macos-11

    steps:
      - name: Check out the codebase.
        uses: actions/checkout@v4

      - name: Uninstall GitHub Actions' built-in Homebrew.
        run: tests/uninstall-homebrew.sh

      - name: Uninstall GitHub Actions' built-in browser installs.
        run: |
          sudo rm -rf /Applications/Firefox.app
          sudo rm -rf /Applications/Google\ Chrome.app
          sudo rm -rf /usr/local/bin/firefox

      - name: Install test dependencies.
        run: |
          sudo pip3 install --upgrade pip
          sudo pip3 install ansible

      - name: Set up the test environment.
        run: |
          cp tests/ansible.cfg ./ansible.cfg
          cp tests/inventory ./inventory
          cp tests/config.yml ./config.yml
          ansible-galaxy install -r requirements.yml

      - name: Test the playbook's syntax.
        run: ansible-playbook main.yml --syntax-check

      - name: Test the playbook.
        run: ansible-playbook main.yml
        env:
          ANSIBLE_FORCE_COLOR: '1'

      - name: Idempotence check.
        run: |
          idempotence=$(mktemp)
          ansible-playbook main.yml | tee -a ${idempotence}
          tail ${idempotence} | grep -q 'changed=0.*failed=0' && (echo 'Idempotence test: pass' && exit 0) || (echo 'Idempotence test: fail' && exit 1)
        env:
          ANSIBLE_FORCE_COLOR: '1'
