---
- name: Mac Update
  hosts: macs

  vars:
    microsoft_update: true
    brew_cu: false
    kubectl: true
    ssh: true
    gpg: true
    homebrew_cask_upgrade_all_packages: true

  environment:
    PATH: "{{env_path}}"

  pre_tasks:
    - import_tasks: ../tasks/pre/additional-facts.yml

    - name: Validate required variables are defined
      ansible.builtin.assert:
        that:
          - env_path is defined
          - env_path | length > 0
          - mybrewbindir is defined
          - myhomedir is defined
        fail_msg: "Required variables missing. Check group_vars/macs/general.yml and additional-facts.yml"
        success_msg: "All required variables validated successfully"

    - import_tasks: ../tasks/pre/cleanup-deprecated-taps.yml
    - import_tasks: ../tasks/pre/cleanup-old-python-versions.yml
    - name: Ensure /private/etc/sudoers.d exists
      file:
        path: "/private/etc/sudoers.d"
        state: directory
      become: true

  tasks:
    - name: Main update execution with guaranteed sudo cleanup
      block:
        - name: Add temporary passwordless sudo permissions
          ansible.builtin.copy:
            content: "{{ ansible_user }} ALL=(ALL) NOPASSWD: ALL"
            dest: "/private/etc/sudoers.d/99_tmp_ansible"
            validate: /usr/sbin/visudo -csf %s
            mode: 0440
          become: true

        - name: Update dotfiles
          include_role:
            name: geerlingguy.dotfiles

        - name: Update Homebrew packages
          include_role:
            name: homebrew

        - name: Run Mac updates
          include_role:
            name: ansible-mac-update

        - name: Run Munki updates
          include_role:
            name: munki_update
          when: munki_update

        - name: Update Node.js via nvm
          include_role:
            name: morgangraphics.nvm
            apply:
              vars:
                nodejs_version: "{{ nodejs_version }}"
          when: nodejs_enabled

        - import_tasks: ../tasks/fonts.yml
          when: configure_osx

      rescue:
        - name: Log update failure
          debug:
            msg: "⚠️  Update failed, but ensuring sudo cleanup runs"

      always:
        - name: Remove temporary passwordless sudo permissions (GUARANTEED)
          ansible.builtin.file:
            path: "/private/etc/sudoers.d/99_tmp_ansible"
            state: absent
          become: true
          ignore_errors: true
