---
- name: Get current whereami release
  ansible.builtin.uri:
    url: https://api.github.com/repos/robmathers/WhereAmI/releases/latest
    return_content: yes
    status_code: [200, 403]  # Handle rate limiting
  register: github_call
  until: github_call.status != 403
  retries: 3
  delay: 30

- name: Validate GitHub API response
  fail:
    msg: "Failed to get whereami release info from GitHub API"
  when: >
    github_call.json is not defined or
    github_call.json.assets is not defined or
    github_call.json.assets | length == 0

- name: Set whereami zip url
  set_fact:
    whereami_zip_url: "{{ github_call.json | json_query('assets[0].browser_download_url') }}"

- name: "Installing {{ whereami_zip_url }}"
  ansible.builtin.unarchive:
    src: "{{ whereami_zip_url }}"
    dest: "{{ myhomedir }}/bin"
    remote_src: yes
  become: false

- name: Create .config directory for API keys
  ansible.builtin.file:
    path: "{{ myhomedir }}/.config/opencage"
    state: directory
    mode: '0700'
  become: false

- name: Store OpenCage API key securely
  ansible.builtin.copy:
    content: "{{ OpenCageAPIKey }}"
    dest: "{{ myhomedir }}/.config/opencage/api_key"
    mode: '0600'  # Only owner can read
  become: false
  no_log: true  # Protect API key from logs

- name: Configure whereami wrapper script
  ansible.builtin.copy:
    content: |
      #!/bin/bash
      # whereami wrapper with secure API key storage
      API_KEY_FILE="{{ myhomedir }}/.config/opencage/api_key"

      if [ ! -f "$API_KEY_FILE" ]; then
          echo "Error: OpenCage API key not found at $API_KEY_FILE" >&2
          exit 1
      fi

      API_KEY=$(cat "$API_KEY_FILE")
      {{ myhomedir }}/bin/whereami -k "$API_KEY" "$@"
    dest: "{{ myhomedir }}/bin/wobinich"
    mode: '0700'  # Only owner can read/execute
  become: false
